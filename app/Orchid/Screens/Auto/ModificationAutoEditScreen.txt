<?php

namespace App\Orchid\Screens\Auto;

use App\Models\Auto\MarcaAuto;
use App\Models\Auto\ModelAuto;
use App\Models\Auto\ModificationAuto;
use App\Models\Base\Status;
use Illuminate\Http\Request;
use Orchid\Screen\Fields\Input;
use Orchid\Screen\Fields\Select;
use Orchid\Support\Facades\Layout;
use App\Orchid\Screens\BaseEditScreen;
use Orchid\Screen\Fields\Relation;
use Orchid\Screen\Fields\ViewField;

class ModificationAutoEditScreen extends BaseEditScreen
{
    /**
     * @var ModificationAuto
     */
    public $obj;
    
    public $targetClass = false;

    public function __construct()
    {
        $this->targetClass = ModificationAuto::GetObj();
    }

    /**
     * Query data.
     *
     * @param ModificationAuto $obj
     *
     * @return array
     */
    public function query(ModificationAuto $obj): array
    {
        return parent::_query($obj);
    }
    /**
     * Views.
     *
     * @return Layout[]
     */
    public function layout(): array
    { 
        $f = array();
        $f['_where']['status'] = Status::ACTIVE;
 
        $marca_select = MarcaAuto::_getAllForSelect($f, array('_admin' => '1', '_musttranslate' => 1), '_name');
        $marca = MarcaAuto::_getAll($f, array('_admin' => '1', '_musttranslate' => 1, '_usecache' => '0'), '_name');

        
        $infoparser = [];
        if($this->obj->idmodel){
            $idselected = $this->obj->idmodel;
        }else{
            $idselected = '';
        }

        foreach($marca as $item){
            $infoparser[$item->id] = [
                'href' => route('platform.execselectmodelauto', ['idmarca' => $item->id, 'idselected' => $idselected]),
                'targetid' => $this->obj->_getAdminId('viewField')
            ];
        }

        $infoparser = json_encode($infoparser);

        $auto_status = Status::GA('general_status');

        return [
            Layout::rows([

                Input::make('obj._requestInfo')
                    ->set('hidden', true),

                $this->getSelectLang(),

                Select::make('obj.status')
                    ->options($auto_status)
                    ->class('js_CA_select')
                    ->title(_GLA('TI_status'))
                    ->id($this->obj->_getAdminId('status'))
                    ->placeholder(_GLA('PH_select status')),


                Select::make('obj.idmarca')
                    ->class('js_CA_select')
                    ->options($marca_select)
                    ->title(_GLA('TI_idmarca'))
                    ->id($this->obj->_getAdminId('idmarca'))
                    ->placeholder(_GLA('PH_select idmarca'))
                    ->set('data-infoparser',$infoparser)
                    ->set('data-oneach','1'),

                ViewField::make('viewField')
                    ->view('Orchid.generalViewField')
                    ->id($this->obj->_getAdminId('viewField'))
                    ->set('id', $this->obj->_getAdminId('viewField'))
                    ->title('View'),

                Input::make('obj.ordercriteria')
                    ->class('js_CA_enter form-control')
                    ->set('data-click','#UpdateButton')
                    ->title(_GLA('TI_ordercriteria'))
                    ->id($this->obj->_getAdminId('ordercriteria'))
                    ->placeholder(_GLA('PH_set ordercriteria')),


                Input::make('obj._name')
                    ->class('js_CA_enter form-control')
                    ->set('data-click','#UpdateButton')
                    ->title(_GLA('TI_name'))
                    ->id($this->obj->_getAdminId('_name'))
                    ->placeholder(_GLA('PH_set name')),

            ])
        ];
    }

    /**
     * @param ModificationAuto    $obj
     * @param Request $request
     *
     * @return \Illuminate\Http\RedirectResponse
     */
    public function createOrUpdate(ModificationAuto $obj, Request $request)
    {
        $obj->idmodel = $request['idmodel'];
        return parent::_createOrUpdate($obj, $request);
    }

    public function backroute(ModificationAuto $obj, Request $request)
    {
        return parent::_backroute($obj, $request);
    }
}

